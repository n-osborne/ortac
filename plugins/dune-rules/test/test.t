This file test the behaviour of the `qcheck-stm` sub-command of the `dune` plugin.

$ export ORTAC_ONLY_PLUGIN=dune-rules

Without the optional output argument (for the dune rules, output for the generated OCaml
have to be set), the rules are printed on stdout. This is useful to check what will be
generated.
  $ ortac dune qcheck-stm intf_spec "init_sut ()" "int sut" test --include=included --package=my_package
  (rule
   (alias runtest)
   (mode promote)
   (deps
    (package ortac-dune))
   (package my_package)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     dune-rules
     (run
      ortac
      dune
      qcheck-stm
      intf_spec
      "init_sut ()"
      "int sut"
      test
      --include=included
      --package=my_package))))
  
  (rule
   (alias runtest)
   (mode promote)
   (package my_package)
   (deps
    (package ortac-qcheck-stm))
   (targets test.ml)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     qcheck-stm
     (with-stdout-to
      %{targets}
      (run
       ortac
       qcheck-stm
       %{dep:intf_spec.mli}
       "init_sut ()"
       "int sut"
       --include=included
       --quiet)))))
  
  (test
   (name test)
   (modules test included)
   (libraries
    intf_spec
    qcheck-stm.stm
    qcheck-stm.sequential
    qcheck-multicoretests-util
    ortac-runtime-qcheck-stm)
   (package my_package)
   (action
    (run
     %{test}
     --verbose)))

When the optional output argument is set, rules will be written in the file and will reflect
this fact.

  $ ortac dune qcheck-stm intf_spec "init_sut ()" "int sut" test --include=included --package=my_package --with-stdout-to=dune.inc
  $ cat dune.inc
  ; This file is generated by ortac dune qcheck-stm
  ; It contains the rules for generating and running QCheck-STM tests for intf_spec
  ; It also contains the rule to generate itself, so you can edit this rule to
  ; change some options rather that running ortac on the command line again
  
  (rule
   (alias runtest)
   (mode promote)
   (deps
    (package ortac-dune))
   (package my_package)
   (targets dune.inc)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     dune-rules
     (run
      ortac
      dune
      qcheck-stm
      intf_spec
      "init_sut ()"
      "int sut"
      test
      --include=included
      --package=my_package
      --with-stdout-to=dune.inc))))
  
  (rule
   (alias runtest)
   (mode promote)
   (package my_package)
   (deps
    (package ortac-qcheck-stm))
   (targets test.ml)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     qcheck-stm
     (with-stdout-to
      %{targets}
      (run
       ortac
       qcheck-stm
       %{dep:intf_spec.mli}
       "init_sut ()"
       "int sut"
       --include=included
       --quiet)))))
  
  (test
   (name test)
   (modules test included)
   (libraries
    intf_spec
    qcheck-stm.stm
    qcheck-stm.sequential
    qcheck-multicoretests-util
    ortac-runtime-qcheck-stm)
   (package my_package)
   (action
    (run
     %{test}
     --verbose)))
